|stack
Data_Out[0] <= Data_Out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_Out[1] <= Data_Out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_Out[2] <= Data_Out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_Out[3] <= Data_Out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Full <= Full~reg0.DB_MAX_OUTPUT_PORT_TYPE
Empty <= Empty~reg0.DB_MAX_OUTPUT_PORT_TYPE
Error <= Error~reg0.DB_MAX_OUTPUT_PORT_TYPE
Clk => Mem[7][0].CLK
Clk => Mem[7][1].CLK
Clk => Mem[7][2].CLK
Clk => Mem[7][3].CLK
Clk => Mem[6][0].CLK
Clk => Mem[6][1].CLK
Clk => Mem[6][2].CLK
Clk => Mem[6][3].CLK
Clk => Mem[5][0].CLK
Clk => Mem[5][1].CLK
Clk => Mem[5][2].CLK
Clk => Mem[5][3].CLK
Clk => Mem[4][0].CLK
Clk => Mem[4][1].CLK
Clk => Mem[4][2].CLK
Clk => Mem[4][3].CLK
Clk => Mem[3][0].CLK
Clk => Mem[3][1].CLK
Clk => Mem[3][2].CLK
Clk => Mem[3][3].CLK
Clk => Mem[2][0].CLK
Clk => Mem[2][1].CLK
Clk => Mem[2][2].CLK
Clk => Mem[2][3].CLK
Clk => Mem[1][0].CLK
Clk => Mem[1][1].CLK
Clk => Mem[1][2].CLK
Clk => Mem[1][3].CLK
Clk => Mem[0][0].CLK
Clk => Mem[0][1].CLK
Clk => Mem[0][2].CLK
Clk => Mem[0][3].CLK
Clk => Error~reg0.CLK
Clk => Data_Out[0]~reg0.CLK
Clk => Data_Out[1]~reg0.CLK
Clk => Data_Out[2]~reg0.CLK
Clk => Data_Out[3]~reg0.CLK
Clk => Empty~reg0.CLK
Clk => Full~reg0.CLK
Clk => counter[0].CLK
Clk => counter[1].CLK
Clk => counter[2].CLK
Clk => counter[3].CLK
RstN => counter.OUTPUTSELECT
RstN => counter.OUTPUTSELECT
RstN => counter.OUTPUTSELECT
RstN => counter.OUTPUTSELECT
RstN => Full.OUTPUTSELECT
RstN => Empty.OUTPUTSELECT
RstN => Data_Out.OUTPUTSELECT
RstN => Data_Out.OUTPUTSELECT
RstN => Data_Out.OUTPUTSELECT
RstN => Data_Out.OUTPUTSELECT
RstN => Error.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
RstN => Mem.OUTPUTSELECT
Data_In[0] => Mem.DATAB
Data_In[0] => Mem.DATAB
Data_In[0] => Mem.DATAB
Data_In[0] => Mem.DATAB
Data_In[0] => Mem.DATAB
Data_In[0] => Mem.DATAB
Data_In[0] => Mem.DATAB
Data_In[0] => Mem.DATAB
Data_In[1] => Mem.DATAB
Data_In[1] => Mem.DATAB
Data_In[1] => Mem.DATAB
Data_In[1] => Mem.DATAB
Data_In[1] => Mem.DATAB
Data_In[1] => Mem.DATAB
Data_In[1] => Mem.DATAB
Data_In[1] => Mem.DATAB
Data_In[2] => Mem.DATAB
Data_In[2] => Mem.DATAB
Data_In[2] => Mem.DATAB
Data_In[2] => Mem.DATAB
Data_In[2] => Mem.DATAB
Data_In[2] => Mem.DATAB
Data_In[2] => Mem.DATAB
Data_In[2] => Mem.DATAB
Data_In[3] => Mem.DATAB
Data_In[3] => Mem.DATAB
Data_In[3] => Mem.DATAB
Data_In[3] => Mem.DATAB
Data_In[3] => Mem.DATAB
Data_In[3] => Mem.DATAB
Data_In[3] => Mem.DATAB
Data_In[3] => Mem.DATAB
push => always0.IN0
push => always0.IN0
push => always0.IN0
pop => always0.IN1
pop => always0.IN1
pop => always0.IN1


