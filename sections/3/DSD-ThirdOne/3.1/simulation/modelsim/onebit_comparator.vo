// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "08/06/2021 23:08:25"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module onebit_comparator (
	a,
	b,
	equal,
	greater,
	less);
input 	a;
input 	b;
output 	equal;
output 	greater;
output 	less;

// Design Ports Information
// equal	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// greater	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// less	=>  Location: PIN_N4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_A7,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("onebit_comparator_v.sdo");
// synopsys translate_on

wire \equal~output_o ;
wire \greater~output_o ;
wire \less~output_o ;
wire \b~input_o ;
wire \a~input_o ;
wire \equal~0_combout ;
wire \LessThan0~0_combout ;
wire \LessThan1~0_combout ;


// Location: IOOBUF_X12_Y0_N9
cycloneiv_io_obuf \equal~output (
	.i(!\equal~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\equal~output_o ),
	.obar());
// synopsys translate_off
defparam \equal~output .bus_hold = "false";
defparam \equal~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X8_Y0_N9
cycloneiv_io_obuf \greater~output (
	.i(\LessThan0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\greater~output_o ),
	.obar());
// synopsys translate_off
defparam \greater~output .bus_hold = "false";
defparam \greater~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X10_Y0_N9
cycloneiv_io_obuf \less~output (
	.i(\LessThan1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\less~output_o ),
	.obar());
// synopsys translate_off
defparam \less~output .bus_hold = "false";
defparam \less~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X12_Y31_N1
cycloneiv_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X14_Y0_N1
cycloneiv_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N24
cycloneiv_lcell_comb \equal~0 (
// Equation(s):
// \equal~0_combout  = \b~input_o  $ (\a~input_o )

	.dataa(\b~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\a~input_o ),
	.cin(gnd),
	.combout(\equal~0_combout ),
	.cout());
// synopsys translate_off
defparam \equal~0 .lut_mask = 16'h55AA;
defparam \equal~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N2
cycloneiv_lcell_comb \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (!\b~input_o  & \a~input_o )

	.dataa(\b~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\a~input_o ),
	.cin(gnd),
	.combout(\LessThan0~0_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = 16'h5500;
defparam \LessThan0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N4
cycloneiv_lcell_comb \LessThan1~0 (
// Equation(s):
// \LessThan1~0_combout  = (\b~input_o  & !\a~input_o )

	.dataa(\b~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\a~input_o ),
	.cin(gnd),
	.combout(\LessThan1~0_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan1~0 .lut_mask = 16'h00AA;
defparam \LessThan1~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign equal = \equal~output_o ;

assign greater = \greater~output_o ;

assign less = \less~output_o ;

endmodule
